apiVersion: v1
kind: Service				#How pods labelled "app: portal-services" are exposed to the cluster
metadata:
  name: portalservices 
spec:
  type: LoadBalancer
  ports:  
  - port: 8080				#port exposed externally, public port
    targetPort: 1337  			#port exposed internally to pods running portal, same as the port the contianerized portal applicaiton is listening on
    protocol: TCP
  selector:
    app: portal				#take the containers with the name portal-services and run them on 
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
 name: portal
spec:
    replicas: 2
    strategy:
      type: RollingUpdate 		
      rollingUpdate:  
        maxUnavailable: 1		#maximum number of unavailable pods	 
        maxSurge: 1  			#maximum number of pods to add due to congestion
    template:
     metadata:
       labels:
         app: portal			#How we target our pods with services
     spec:
       containers:
       - name: portal-serivces
         imagePullPolicy: Never
         image: kubernetesmicroserviceapp_portal:latest 
         ports:				#Port our containerized application is listening on 	
         - containerPort: 1337
         env:
         - name: READ_IP
           value: readservice
         - name: UPDATE_IP 
           value: updateservice 
         - name: CREATE_IP 
           value: createservice 
         - name: DELETE_IP 
           value: deleteservice 
         - name: DB_HOST 
           value: typetesterdb.mysql.database.azure.com 
         - name: DB_PASSWORD
           value: HelloGoodbye13! 
         - name: DB_ADMIN
           value: UserAdmin14@typetesterdb 
         - name: JWT_KEY
           value: PrivateAuthenticationKey12
---
apiVersion: v1
kind: Service                            #How pods labelled "app: portal-services" are exposed to the cluster
metadata:
  name: readservice			#ACCORDING TO MY RESEARCH THE READ SERVICE SHOULD BE INTERNALLY ACCESSIBLE THROUGH THE NAME
spec:
  type: ClusterIP
  ports:
  - port: 1339                           #port exposed externally, public port
    targetPort: 1339                     #port exposed internally to pods running portal, same as the port the contianerized portal applicaiton is listening on
    protocol: TCP
  selector:
    app: read              	 	 #take the containers with the name portal-services and run them on 
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
 name: readservice
spec:
    replicas: 1
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1               #maximum number of unavailable pods      
        maxSurge: 1                     #maximum number of pods to add due to congestion
    template:
     metadata:
       labels:
         app: read                   #How we target our pods with services
     spec:
       containers:
       - name: read-serivces
         imagePullPolicy: Never 
         image: kubernetesmicroserviceapp_read:latest
         ports:                         #Port our containerized application is listening on     
         - containerPort: 1339
         env:
         - name: DB_HOST
           value: typetesterdb.mysql.database.azure.com
         - name: DB_PASSWORD
           value: HelloGoodbye13!
         - name: DB_ADMIN
           value: UserAdmin14@typetesterdb
         - name: JWT_KEY
           value: PrivateAuthenticationKey12
---
apiVersion: v1
kind: Service  
metadata:
  name: createservice   
spec:
  type: ClusterIP
  ports:
  - port: 1341          
    targetPort: 1341    
    protocol: TCP
  selector:
    app: create         
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
 name: createservice
spec:
    replicas: 1
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1 
        maxSurge: 1       
    template:
     metadata:
       labels:
         app: create     
     spec:
       containers:
       - name: create-serivces
         imagePullPolicy: Never 
         image: kubernetesmicroserviceapp_create:latest
         ports:         
         - containerPort: 1341
         env:
         - name: DB_HOST
           value: typetesterdb.mysql.database.azure.com
         - name: DB_PASSWORD
           value: HelloGoodbye13!
         - name: DB_ADMIN
           value: UserAdmin14@typetesterdb
         - name: JWT_KEY
           value: PrivateAuthenticationKey12
---
apiVersion: v1
kind: Service                         
metadata:
  name: deleteservice                
spec:
  type: ClusterIP
  ports:
  - port: 1338                      
    targetPort: 1338               
    protocol: TCP
  selector:
    app: delete                   
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
 name: deleteservice
spec:
    replicas: 1
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1        
        maxSurge: 1             
    template:
     metadata:
       labels:
         app: delete           
     spec:
       containers:
       - name: delete-serivces
         imagePullPolicy: Never 
         image: kubernetesmicroserviceapp_delete:latest
         ports:               
         - containerPort: 1338
         env:
         - name: DB_HOST
           value: typetesterdb.mysql.database.azure.com
         - name: DB_PASSWORD
           value: HelloGoodbye13!
         - name: DB_ADMIN
           value: UserAdmin14@typetesterdb
         - name: JWT_KEY
           value: PrivateAuthenticationKey12
---
apiVersion: v1
kind: Service               
metadata:
  name: updateservice 
spec:
  type: ClusterIP
  ports:
  - port: 1340       
    targetPort: 1340 
    protocol: TCP
  selector:
    app: update     
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
 name: updateservice
spec:
    replicas: 1
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1   
        maxSurge: 1        
    template:
     metadata:
       labels:
         app: update      
     spec:
       containers:
       - name: update-serivces
         imagePullPolicy: Never 
         image: kubernetesmicroserviceapp_update:latest  
         ports:          
         - containerPort: 1340
         env:
         - name: DB_HOST
           value: typetesterdb.mysql.database.azure.com
         - name: DB_PASSWORD
           value: HelloGoodbye13!
         - name: DB_ADMIN
           value: UserAdmin14@typetesterdb
         - name: JWT_KEY
           value: PrivateAuthenticationKey12
